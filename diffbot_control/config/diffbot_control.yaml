diffbot:
  # Settings for ros_control hardware interface
  hardware_interface:
     joints:
        - front_left_wheel_joint
        - front_right_wheel_joint
          
  # Publish all joint states -----------------------------------
  joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50
    extra_joints:
      - name: rear_caster_rotation_joint
        position: 0.01
        velocity: 0.0
        effort: 0.0
      - name: rear_caster_wheel_joint
        position: 0.01
        velocity: 0.0
        effort: 0.0


  mobile_base_controller:
    type: diff_drive_controller/DiffDriveController
    publish_rate: 50

    left_wheel:  'front_left_wheel_joint'
    right_wheel: 'front_right_wheel_joint'

    # Wheel separation and diameter. These are both optional.
    # diff_drive_controller will attempt to read either one or both from the
    # URDF if not specified as a parameter
    wheel_separation : 0.145
    wheel_radius : 0.0325

    # Odometry covariances for the encoder output of the robot. These values should
    # be tuned to your robot's sample odometry data, but these values are a good place
    # to start
    pose_covariance_diagonal:  [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

    # Top level frame (link) of the robot description
    # Don't publish base_footprint->odom transform here it will be done by robot_localization after sensor fusion
    # base_frame_id: base_footprint 

    # Odometry fused with IMU is published by robot_localization, so
    # no need to publish a TF based on encoders alone.
    # This was the breakthrough that allowed sensor fusion while using differential_drive_controller
    enable_odom_tf: false


    # Velocity and acceleration limits for the robot
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 0.3   # m/s
        has_acceleration_limits: true
        max_acceleration       : 0.6   # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 8.0   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 6.0   # rad/s^2
